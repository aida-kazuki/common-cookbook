# Generated by Chef for <%= node['hostname'] %>.
# Local modifications will be overwritten.
<% unless @params.key?(:proxy_timeout) -%>
<% @param[:proxy_timeout] = "600" -%>
<% end -%>

upstream <%= @params[:upstream] %>_server {
  # for UNIX domain socket setups:
  server unix:<%= @params[:socket] %> fail_timeout=0;
}

server {
  listen 80;
  server_name <%= @params[:server_name] %>;
  root <%= @params[:root] %>;

  access_log <%= @params[:access_log] %>.access.log ltsv;
  error_log <%= @params[:error_log] %>.error.log;

  if ($request_method !~ ^(GET|HEAD|PUT|POST|DELETE|OPTIONS)$) {
    return 405;
  }

<% if @params[:maintenance] -%>
  if (-f <%= @params[:maintenance] %>) {
    return 503;
  }
<% end -%>

<% if @params[:force_http_redirect] -%>
  if ($http_x_forwarded_proto != 'https') {
    rewrite ^ https://$host$request_uri? permanent;
  }
<% end -%>

  location ~* ^/assets {
    try_files $uri @unicorn;
    gzip_static on;
    expires max;
    add_header Cache-Control public;
    add_header Last-Modified "";
    add_header ETag "";
  }

  location = /favicon.ico {
    log_not_found off;
    access_log    off;
  }

  location = /robots.txt {
    allow         all;
    log_not_found off;
    access_log    off;
  }

  try_files $uri/index.html $uri.html $uri @unicorn;

  location @unicorn {
    proxy_connect_timeout <%= @params[:proxy_timeout] %>;
    proxy_send_timeout    <%= @params[:proxy_timeout] %>;
    proxy_read_timeout    <%= @params[:proxy_timeout] %>;
    proxy_set_header      X-Real-IP $remote_addr;
    proxy_set_header      X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header      Host $http_host;
    proxy_redirect        off;
    proxy_pass http://<%= @params[:upstream] %>_server;
  }

  error_page 500 502 504 /500.html;
  error_page 503 @maintenance;

  client_body_timeout       10;
  client_header_timeout     10;
  client_header_buffer_size 128;
  client_max_body_size      128m;

<% if @params.key?(:keepalive_timeout) -%>
  keepalive_timeout <%= @params[:keepalive_timeout] %>;
<% end -%>
}


server {
  listen 8080;
  server_name <%= @params[:server_name].split(' ')[0] %>;
  root <%= @params[:root] %>;

  access_log <%= @params[:access_log] %>.status-access.log ltsv;
  error_log <%= @params[:error_log] %>.status-error.log;

<% if @params[:maintenance] -%>
  if (-f <%= @params[:maintenance] %>) {
    return 503;
  }
<% end -%>

  try_files $uri/index.html $uri.html $uri @unicorn;

  location @unicorn {
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header Host $http_host;
    proxy_redirect off;
    proxy_pass http://<%= @params[:upstream] %>_server;
  }

  error_page 500 502 504 /500.html;
  error_page 503 @maintenance;

  client_body_timeout       10;
  client_header_timeout     10;
  client_header_buffer_size 128;
  client_max_body_size      128m;

<% if @params.key?(:keepalive_timeout) -%>
  keepalive_timeout <%= @params[:keepalive_timeout] %>;
<% end -%>
}
